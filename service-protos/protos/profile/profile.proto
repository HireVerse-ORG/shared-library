syntax = "proto3";

package profile;

message CreateSeekerProfileRequest {
    string profileName = 1;
    string userId = 2;
    string profileUsername = 3;  
}

message CreateSeekerProfileResponse {
    string message = 2;  
}

message GetCompanyProfileByUserIdRequest {
    string userId = 1; 
}

message Location {
    string country = 1;
    string city = 2;
}

message SocialLinks {
    string linkedin = 1;
    string twitter = 2;
    string facebook = 3;
    string instagram = 4;
}


message CompanyProfile {
    string id = 1;
    string userId = 2;
    string companyId = 3;
    string name = 4;
    Location location = 5;
    string bio = 6;
    string image = 7;
    string industry = 8;
    string companyType = 9;
    string email = 10;
    string phone = 11;
    string website = 12;
    SocialLinks socialLinks = 13;
    int32 employeeCount = 14;
    string status = 15;
    string founded = 16; 
    string createdAt = 17;
    string updatedAt = 18;
}

message SeekerProfile {
    string id = 1;
    string userId = 2; 
    string profileName = 3; 
    string title = 4; 
    Location location = 5;
    bool isOpenToWork = 6; 
    string bio = 7; 
    string profileUsername = 8; 
    string image = 9; 
    string coverImage = 10; 
    repeated string skills = 11; 
    string createdAt = 12; 
    string updatedAt = 13; 
}

message GetCompanyProfileByUserIdResponse {
    CompanyProfile profile = 1;
}

message GetCompanyProfilesByLocationRequest {
    Location location = 1;
    string place = 2;
}

message GetCompanyProfilesByLocationResponse {
    repeated CompanyProfile profiles = 1;
}

message GetCompanyProfilesByIdListRequest {
    repeated string ids = 1;
}

message GetCompanyProfilesByIdListResponse {
    repeated CompanyProfile profiles = 1;
}

message GetSeekerProfileByUserIdRequest {
    string userId = 1; 
}

message GetSeekerProfileByUserIdResponse {
    SeekerProfile profile = 1;
}

service SeekerProfileService {
    rpc CreateSeekerProfile (CreateSeekerProfileRequest) returns (CreateSeekerProfileResponse);
    rpc GetSeekerProfileByUserId (GetSeekerProfileByUserIdRequest) returns (GetSeekerProfileByUserIdResponse);
}

service CompanyProfileService {
    rpc GetCompanyProfileByUserId (GetCompanyProfileByUserIdRequest) returns (GetCompanyProfileByUserIdResponse);
    rpc GetCompanyProfilesByLocation (GetCompanyProfilesByLocationRequest) returns (GetCompanyProfilesByLocationResponse);
    rpc GetCompanyProfilesByIdList (GetCompanyProfilesByIdListRequest) returns (GetCompanyProfilesByIdListResponse);
}
